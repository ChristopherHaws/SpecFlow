<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- this setting is to workaround the bug in VS (does not detect changes during the pre-build event)
       see: https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=423670&wa=wsignin1.0
  -->
  <PropertyGroup>
    <SpecFlow_UseHostCompilerIfAvailable Condition="'$(SpecFlow_UseHostCompilerIfAvailable)'==''">false</SpecFlow_UseHostCompilerIfAvailable>
    <UseHostCompilerIfAvailable>$(SpecFlow_UseHostCompilerIfAvailable)</UseHostCompilerIfAvailable>
  </PropertyGroup>

  <PropertyGroup>
    <ShowTrace Condition="'$(ShowTrace)'==''">false</ShowTrace>

    <OverwriteReadOnlyFiles Condition="'$(OverwriteReadOnlyFiles)'==''">false</OverwriteReadOnlyFiles>
    <ForceGeneration Condition="'$(ForceGeneration)'==''">false</ForceGeneration>
    <VerboseOutput Condition="'$(VerboseOutput)'==''">false</VerboseOutput>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildServerMode)' == ''">
    <BuildServerMode Condition="'$(BuildingInsideVisualStudio)'=='true'">false</BuildServerMode>
    <BuildServerMode Condition="'$(BuildingInsideVisualStudio)'!='true'">true</BuildServerMode>
  </PropertyGroup>

  <PropertyGroup>
    <BuildDependsOn>
      BeforeUpdateFeatureFilesInProject;
      UpdateFeatureFilesInProject;
      AfterUpdateFeatureFilesInProject;
      $(BuildDependsOn);
    </BuildDependsOn>
    <RebuildDependsOn>
      SwitchToForceGenerate;
      $(RebuildDependsOn);
    </RebuildDependsOn>
    <CleanDependsOn>
      CleanSpecFlowFeatureFiles;
      $(CleanDependsOn);
    </CleanDependsOn>
  </PropertyGroup>

  <!--<ItemGroup>
    <Compile Update="@(Compile)" Condition="$([System.String]::Copy('%(Filename)%(Extension)').EndsWith('.feature.cs'))">
      <Visible>false</Visible>
    </Compile>
  </ItemGroup>-->

  <Target Name="SwitchToForceGenerate">
    <PropertyGroup>
      <ForceGeneration>true</ForceGeneration>
      <OnlyUpdateIfChanged>true</OnlyUpdateIfChanged>
    </PropertyGroup>
  </Target>

  <Target Name="CleanSpecFlowFeatureFiles">
    <!--<Delete Files="@(SpecFlowGeneratedFile)" />-->
  </Target>

  <UsingTask TaskName="SpecFlow.Build.Tasks.GenerateAll" AssemblyFile="$(SpecFlowBuildTasksAssembly)" />
  <Target Name="UpdateFeatureFilesInProject" DependsOnTargets="BeforeUpdateFeatureFilesInProject" Inputs="@(SpecFlowFeatureFile)" Outputs="@(SpecFlowFeatureFile->'%(Identity).cs')">
    <GenerateAll
      ShowTrace="$(ShowTrace)"

      BuildServerMode="$(BuildServerMode)"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      
      ProjectPath="$(MSBuildProjectFullPath)"
      ForceGeneration="$(ForceGeneration)"
      VerboseOutput="$(VerboseOutput)">
      <Output TaskParameter="GeneratedFiles" ItemName="SpecFlowGeneratedFile" />
    </GenerateAll>

    <ItemGroup>
      <!-- Deduplicate the generated files from the ones picked up directly by the default glob -->
      <Compile Remove="@(SpecFlowGeneratedFile)" />
      <Compile Include="@(SpecFlowGeneratedFile)">
        <Visible>false</Visible>
      </Compile>
      <FileWrite Include="@(SpecFlowGeneratedFile)" />
    </ItemGroup>
  </Target>

  <Target Name="BeforeUpdateFeatureFilesInProject" />
  <Target Name="AfterUpdateFeatureFilesInProject" DependsOnTargets="UpdateFeatureFilesInProject" />

</Project>
