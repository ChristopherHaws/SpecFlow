<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- this setting is to workaround the bug in VS (does not detect changes during the pre-build event)
       see: https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=423670&wa=wsignin1.0
  -->
  <PropertyGroup>
    <SpecFlow_UseHostCompilerIfAvailable Condition="'$(SpecFlow_UseHostCompilerIfAvailable)'==''">false</SpecFlow_UseHostCompilerIfAvailable>
    <UseHostCompilerIfAvailable>$(SpecFlow_UseHostCompilerIfAvailable)</UseHostCompilerIfAvailable>
  </PropertyGroup>

  <PropertyGroup>
    <ShowTrace Condition="'$(ShowTrace)'==''">false</ShowTrace>

    <OverwriteReadOnlyFiles Condition="'$(OverwriteReadOnlyFiles)'==''">false</OverwriteReadOnlyFiles>
    <ForceGeneration Condition="'$(ForceGeneration)'==''">false</ForceGeneration>
    <VerboseOutput Condition="'$(VerboseOutput)'==''">false</VerboseOutput>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildServerMode)' == ''">
    <BuildServerMode Condition="'$(BuildingInsideVisualStudio)'=='true'">false</BuildServerMode>
    <BuildServerMode Condition="'$(BuildingInsideVisualStudio)'!='true'">true</BuildServerMode>
  </PropertyGroup>

  <PropertyGroup>
    <BuildDependsOn>
      BeforeUpdateFeatureFilesInProject;
      UpdateFeatureFilesInProject;
      CompileGeneratedFeatureFiles;
      AfterUpdateFeatureFilesInProject;
      $(BuildDependsOn);
    </BuildDependsOn>
    <RebuildDependsOn>
      SwitchToForceGenerate;
      $(RebuildDependsOn);
    </RebuildDependsOn>
  </PropertyGroup>

  <Target Name="SwitchToForceGenerate">
    <PropertyGroup>
      <ForceGeneration>true</ForceGeneration>
      <OnlyUpdateIfChanged>true</OnlyUpdateIfChanged>
    </PropertyGroup>
  </Target>

  <Target Name="UpdateFeatureFilesInProject" DependsOnTargets="BeforeUpdateFeatureFilesInProject" Inputs="@(SpecFlowFeatureFiles)" Outputs="@(SpecFlowFeatureFiles->'%(RelativeDir)\%(Filename).feature.cs')">
    <GenerateAll
      ShowTrace="$(ShowTrace)"

      BuildServerMode="$(BuildServerMode)"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      
      ProjectPath="$(MSBuildProjectFullPath)"
      ForceGeneration="$(ForceGeneration)"
      VerboseOutput="$(VerboseOutput)">
      <Output TaskParameter="GeneratedFiles" ItemName="SpecFlowGeneratedFiles" />
    </GenerateAll>
  </Target>

  <Target Name="CompileGeneratedFeatureFiles" DependsOnTargets="UpdateFeatureFilesInProject">
    <ItemGroup>
      <!--
      FIXME:
      Because of the incremental build features of UpdateFeatureFilesInProject, the SpecFlowGeneratedFiles items are not populated.
      We need to keep another item group with previously build files...
      
      Right now, the first build will fail since the cs files will not exist...
      -->
      <!--<Compile Include="@(SpecFlowGeneratedFiles)">
        <Visible>false</Visible>
      </Compile>-->
    </ItemGroup>
  </Target>

  <Target Name="BeforeUpdateFeatureFilesInProject" />
  <Target Name="AfterUpdateFeatureFilesInProject" DependsOnTargets="UpdateFeatureFilesInProject" />

</Project>
